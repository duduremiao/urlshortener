---
server:
  port: 8080
  shutdown: graceful
spring:
  application:
    name: url-shortener
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
        format_sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
        shutdown-timeout: 100ms
  cache:
    type: redis
    redis:
      time-to-live: 24h
      cache-null-values: false
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    redis:
      enabled: true
    db:
      enabled: true
app:
  base-url: ${BASE_URL:http://localhost:8080}
logging:
  level:
    com.urlshortener: INFO
    org.springframework.cache: INFO
    org.springframework.data.redis: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: production
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:proddb}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
  jpa:
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
    show-sql: false
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 5000ms
      # Configuração para falhar graciosamente se Redis não estiver disponível
      lettuce:
        pool:
          max-active: 4
          max-idle: 2
          min-idle: 0
  h2:
    console:
      enabled: false
  cache:
    type: redis
    redis:
      time-to-live: 24h
server:
  port: 8080
  shutdown: graceful
app:
  base-url: ${BASE_URL:http://url-shortener-env.eba-rfv3b5xr.sa-east-1.elasticbeanstalk.com}
logging:
  level:
    com.urlshortener: INFO
    org.springframework.cache: WARN
    org.springframework.data.redis: WARN

---
spring:
  config:
    activate:
      on-profile: development
  datasource:
    url: jdbc:h2:mem:devdb
    username: sa
    password: password
  jpa:
    show-sql: true
app:
  base-url: ${BASE_URL:http://localhost:8080}
logging:
  level:
    com.urlshortener: DEBUG
    org.springframework.cache: DEBUG